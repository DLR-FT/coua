@prefix coua: <https://gitlab.dlr.de/ft-ssy-avs/ap/coua/schema#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix do178c: <https://gitlab.dlr.de/ft-ssy-avs/ap/coua/ontologies/do178c#> .
@prefix m: <https://gitlab.dlr.de/ft-ssy-avs/ap/coua/resources/manifest#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix req: <https://gitlab.dlr.de/ft-ssy-avs/ap/coua/resources/requirements#> .
@prefix uc: <https://gitlab.dlr.de/ft-ssy-avs/ap/coua/resources/use-cases#> .

<https://gitlab.dlr.de/ft-ssy-avs/ap/coua/resources/manifest#> a owl:Ontology ;
	dc:title "Certification data for Coua" .

########
# Data #
########

m:Requirements a do178c:SoftwareRequirementsData ;
	coua:requires (
		req:ingest req:Req02 req:Req03 req:ci req:ingest req:Req06 req:Req07 req:Req08
		req:Req09 req:Req10 req:Req11 req:report req:Req13 req:Req14 req:Req15 req:Req16
		req:Req17 req:Req18 req:indep req:Req20 req:Req21 req:Req22 req:Req23 req:Req24
		req:Req25 req:Req26 req:Req27 req:Req28 req:Req29 req:Req30 req:Req31 req:Req32
		req:Req33 req:Req34 req:Req35 req:Req36 req:Req37 req:Req38 req:Req39 req:Req40
		req:Req41 req:Req42 req:Req43 req:Req44 req:Req45 req:Req46 req:Req47 req:Req48
		req:Req50 req:Req51 req:Req53 req:Req54 req:Req55 req:cli   req:Req57 req:Req58
		) .

m:Coua a coua:Product ;
	coua:useCases (
		uc:UC02 uc:UC03 uc:UC04 uc:UC05 uc:UC06 uc:UC07 uc:UC08 uc:UC09 uc:UC10 ) .

# TODO system level requirements
# TODO missing rationale

req:Req00 a coua:SystemLevelRequirement ;
	coua:requirementId "Req00" ;
	coua:description "The software is automatically checked for certifiability."@en ;
	coua:owner "DLR"@de .
req:check a coua:HighLevelRequirement ;
	coua:traces req:Req00 ;
	coua:requirementId "Req100" ;
	coua:owner "DLR" ;
	coua:description "Coua shall provide the current satisfiability of the relevant objectives."@en .
req:Req01 a coua:LowLevelRequirement ;
	coua:traces req:ingest ;
	coua:requirementId "Req01" ;
	coua:description "The certification framework shall provide a library of functions for ingesting artifacts produced by COTS tools."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC04 ;
	coua:rationale "In a typical Git-based workflow, CI provides automated checks of the software development process and software and tests. The results of these checks are provided in various machine-readable formats."@en .
req:Req02 a coua:LowLevelRequirement ;
	coua:requirementId "Req02" ;
	coua:traces req:ingest ;
	coua:description "The framework shall provide means for describing the interfaces, inputs and outputs of custom COTS tools."@en ;
	coua:owner "DLR" .
req:Req03 a coua:LowLevelRequirement ;
	coua:requirementId "Req03" ;
	coua:traces req:report ;
	coua:description "The certification report shall include all certification objectives and references to all required evidences it has access to."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:ci a coua:HighLevelRequirement ;
	coua:requirementId "Req04" ;
	coua:traces req:Req00 ;
	coua:description "While CI is in use, when changes are committed to the SCM, Coua shall generate a certification report."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC02 .
req:ingest a coua:HighLevelRequirement ;
	coua:requirementId "Req05" ;
	coua:traces req:Req00 ;
	coua:description "Coua shall be able to ingest requirements, evidences, justifications and data-items from artifacts produced by COTS tools."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC04 .
req:Req06 a coua:LowLevelRequirement ;
	coua:requirementId "Req06" ;
	coua:description "Coua shall provide means to specify how to obtain artifacts created by other tools."@en ;
	coua:traces req:ingest ;
	coua:owner "DLR" ;
	coua:useCase uc:UC06 .
req:Req07 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req12" ;
	coua:description "When the certification report is generated, Coua shall always produce the same report for the same project state."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC05 .
req:Req08 a coua:LowLevelRequirement ;
	coua:traces req:ingest ;
	coua:requirementId "Req08" ;
	coua:description "Coua shall provide means to extend the ontologies of generalized standards such as DO-178C to project-specific certification objectives"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC6 .
req:Req09 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req09" ;
	coua:description "Coua shall provide means to identify which ontologies were used to perform verification and validation in the certification report."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC6 .
req:Req10 a coua:LowLevelRequirement ;
	coua:traces req:check ;
	coua:requirementId "Req10" ;
	coua:description "Coua shall track the association between artifacts like requirements, test cases, source code and object code (tracing)."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC8 .
req:Req11 a coua:LowLevelRequirement ;
	coua:traces req:check ;
	coua:requirementId "Req11" ;
	coua:description "Coua shall track the association between artifacts and objectives."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC08 .
req:report a coua:HighLevelRequirement ;
	coua:traces req:Req00 ;
	coua:requirementId "Req12" ;
	coua:description "Coua shall generate certification reports."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:Req13 a coua:LowLevelRequirement ;
	coua:traces req:check ;
	coua:requirementId "Req13" ;
	coua:description "While Coua performs validation activities, if any failing satisfiable objectives are encountered, Coua shall indicate to the CI that its activities have failed."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req14 a coua:LowLevelRequirement ;
	coua:requirementId "Req14" ;
	coua:traces req:check ;
	coua:description "While Coua performs validation activities, if any failing unsatisfiable objectives are encountered, Coua shall not indicate that its activities have failed. "@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req15 a coua:LowLevelRequirement ;
	coua:requirementId "Req15" ;
	coua:traces req:check ;
	coua:description "Coua shall provide a way to mark objectives as unsatisfiable"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req16 a coua:LowLevelRequirement ;
	coua:requirementId "Req16" ;
	coua:traces req:check ;
	coua:description "Coua shall provide a way to remove the unsatisfiable mark from objectives."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req17 a coua:LowLevelRequirement ;
	coua:requirementId "Req17" ;
	coua:traces req:ci ;
	coua:description "While CI is in use, Coua shall signal failed objectives as errors"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC02 .
req:Req18 a coua:LowLevelRequirement ;
	coua:requirementId "Req18" ;
	coua:traces req:ingest ;
	coua:description "Coua shall ingest artifacts in the Static Analysis Results Interchange Format (SARIF) format without additional processing"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC07 .
req:indep a coua:HighLevelRequirement ;
	coua:requirementId "Req19" ;
	coua:traces req:Req00 ;
	coua:description "Coua shall be executable independently of CI, e.g. locally on a developer’s or tester’s computer"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC05 .
req:Req20 a coua:LowLevelRequirement ;
	coua:requirementId "Req20" ;
	coua:traces req:ci ;
	coua:description "Coua shall be executable in CI"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC02 .
req:Req21 a coua:LowLevelRequirement ;
	coua:requirementId "Req21" ;
	coua:traces req:ingest ;
	coua:description "Coua shall provide means for ingesting artifacts from the local filesystem"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC03 .
req:Req22 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req22" ;
	coua:description "When Coua produces a certification report, where data from artifacts is used, Coua shall include data about the tools that produced the artifacts."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC05 .
req:Req23 a coua:LowLevelRequirement ;
	coua:requirementId "Req23" ;
	coua:traces req:ingest ;
	coua:description "If the ontology contains syntactical errors, then Coua shall refuse to evaluate the ontology and produce a meaningful error message."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC06 .
req:Req24 a coua:LowLevelRequirement ;
	coua:requirementId "Req24" ;
	coua:traces req:ingest ;
	coua:description "If an artifact contains syntactical errors, then Coua shall refuse to produce a certification report that includes it and issue a meaningful error message."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC04 .
req:Req25 a coua:LowLevelRequirement ;
	coua:requirementId "Req25" ;
	coua:traces req:ingest ;
	coua:description "Coua shall allow for importing requirements data in a Comma Separated Values (CSV) format."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC04 .
req:Req26 a coua:LowLevelRequirement ;
	coua:requirementId "Req26" ;
	coua:traces req:ingest ;
	coua:description "Coua shall specify an ontology for requirements data."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC08 .
req:Req27 a coua:LowLevelRequirement ;
	coua:requirementId "Req27" ;
	coua:traces req:report ;
	coua:description "Coua shall allow for defining custom content in the certification report."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC04 .
req:Req28 a coua:LowLevelRequirement ;
	coua:requirementId "Req28" ;
	coua:traces req:check ;
	coua:description "Coua shall allow a project to run custom queries on the ontologies."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:Req29 a coua:LowLevelRequirement ;
	coua:requirementId "Req29" ;
	coua:traces req:report ;
	coua:description "Coua shall provide a well-defined output schema for the certification report."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC09 .
req:archive a coua:HighLevelRequirement ;
	coua:traces req:Req00 ;
	coua:requirementId "Req31" ;
	coua:description "When a new version of the component is released, the artifact archive shall version and permanently record all software, configuration and non-reproducible artifacts that are required for recreating the certification report for that version."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC03 .
req:ontologies a coua:HighLevelRequirement ;
	coua:traces req:Req00 ;
	coua:requirementId "Req32" ;
	coua:description "The ontologies shall model all necessary knowledge from the certification objectives that specify what is required for certification approval."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC06 .
req:Req33 a coua:LowLevelRequirement ;
	coua:traces req:ingest ;
	coua:requirementId "Req33" ;
	coua:description "Coua shall be able to ingest ontologies in the OWL2 format."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC04 .
req:Req34 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req34" ;
	coua:description "The certification report shall clearly display which objective is satisfied."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:Req35 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req35" ;
	coua:description "If the certification report indicates that all objectives are met, Coua shall make it clear that this is not guaranteed."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:Req36 a coua:LowLevelRequirement ;
	coua:requirementId "Req36" ;
	coua:traces req:report ;
	coua:description "The certification report shall clearly display whether an objective has regressed."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC02 .
req:Req37 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req37" ;
	coua:description "The certification report shall mark failing satisfiable objectives."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req38 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req38" ;
	coua:description "The certification report shall mark not yet satisfiable objectives."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req39 a coua:LowLevelRequirement ;
	coua:requirementId "Req39" ;
	coua:traces req:report ;
	coua:description "When an objective is violated, the certification report shall highlight the precise artifacts that are the source of the violation."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC07 .
req:Req40 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req40" ;
	coua:description "The certification report shall be human-readable."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:Req41 a coua:LowLevelRequirement ;
	coua:requirementId "Req41" ;
	coua:traces req:report ;
	coua:description "The certification report shall be machine-readable."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC09 .
req:Req42 a coua:LowLevelRequirement ;
	coua:requirementId "Req42" ;
	coua:traces req:report ;
	coua:description "The certification reports shall have the same contents in both human- and machine- readable forms."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC09 .
req:Req43 a coua:LowLevelRequirement ;
	coua:requirementId "Req43" ;
	coua:traces req:report ;
	coua:description "The certification report shall include all failed objectives."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC02 .
req:Req44 a coua:LowLevelRequirement ;
	coua:requirementId "Req44" ;
	coua:traces req:report ;
	coua:description "The certification report shall present unsatisfiable objectives less prominently."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req45 a coua:LowLevelRequirement ;
	coua:requirementId "Req45" ;
	coua:traces req:report ;
	coua:description "While the artifacts provide the required information, the certification report shall include all data items and evidences required to build an assurance case."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req46 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req46" ;
	coua:description "The certification framework shall allow for defining custom content in the rendered certification report."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC10 .
req:Req47 a coua:LowLevelRequirement ;
	coua:traces req:report ;
	coua:requirementId "Req47" ;
	coua:description "Coua shall finish producing the report in a time that allows for fast feedback during development."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC02 .
req:Req48 a coua:LowLevelRequirement ;
	coua:requirementId "Req48" ;
	coua:traces req:report ;
	coua:description "Coua shall use not more than half of the memory that is available in the CI or in the development requirement."@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC02 .
req:Req50 a coua:LowLevelRequirement ;
	coua:traces req:check ;
	coua:requirementId "Req50" ;
	coua:description "Coua shall validate if the objectives for certification of the project are satisfied"@en ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:Req51 a coua:LowLevelRequirement ;
	coua:requirementId "Req51" ;
	coua:description "Coua shall be able to access trace data from mantra.db."@en ;
	coua:owner "DLR" ;
	coua:traces req:ingest ;
	coua:useCase uc:UC08 .
req:cli a coua:HighLevelRequirement ;
	coua:requirementId "Req52" ;
	coua:description "Coua shall provide its functionality via a command line interface (CLI)."@en ;
	coua:owner "DLR" ;
	coua:traces req:Req00 ;
	coua:useCase uc:UC05 .
req:Req53 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a CLI command to check the objectives."@en ;
	coua:requirementId "Req53" ;
	coua:owner "DLR" ;
	coua:traces req:cli .
req:Req54 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a CLI command to trace requirements from Python source code."@en ;
	coua:requirementId "Req54" ;
	coua:owner "DLR" ;
	coua:traces req:cli .
req:Req55 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a CLI command to initialize a project for use with Coua."@en ;
	coua:requirementId "Req55" ;
	coua:owner "DLR" ;
	coua:traces req:cli .
req:configuration a coua:HighLevelRequirement ;
	coua:description "Coua shall be configurable using a configuration file"@en ;
	coua:traces req:Req00 ;
	coua:requirementId "Req56" ;
	coua:owner "DLR" ;
	coua:useCase uc:UC08 .
req:Req57 a coua:LowLevelRequirement ;
	coua:description "Coua shall allow for configuration of the ontologies to check against."@en ;
	coua:requirementId "Req57" ;
	coua:owner "DLR" ;
	coua:traces req:cli .
req:Req58 a coua:LowLevelRequirement ;
	coua:description "Coua shall allow for configuration of the kinds locations and mappings of the data items."@en ;
	coua:requirementId "Req58" ;
	coua:owner "DLR" ;
	coua:traces req:cli .
req:documents a coua:HighLevelRequirement ;
	coua:description "Coua shall provide a plugin that generates documentation about the certifiability status of the software."@en ;
	coua:traces req:Req00 ;
	coua:requirementId "Req59" ;
	coua:owner "DLR" ;
	coua:useCase uc:UC01 .
req:Req60 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a directive that renders a list of requirements."@en ;
	coua:requirementId "Req60" ;
	coua:owner "DLR" ;
	coua:traces req:documents .
req:Req61 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a directive that renders a tracability matrix."@en ;
	coua:requirementId "Req61" ;
	coua:owner "DLR" ;
	coua:traces req:documents .
req:Req62 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a directive that renders a coverage matrix."@en ;
	coua:requirementId "Req62" ;
	coua:owner "DLR" ;
	coua:traces req:documents .
req:Req63 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a directive that renders status of each certification objective."@en ;
	coua:requirementId "Req63" ;
	coua:owner "DLR" ;
	coua:traces req:documents .
req:Req64 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide the directives as a Sphinx extension."@en ;
	coua:requirementId "Req64" ;
	coua:owner "DLR" ;
	coua:traces req:documents .
req:Req65 a coua:LowLevelRequirement ;
	coua:description "Coua shall use the same data for the checks as for generating the documents."@en ;
	coua:requirementId "Req65" ;
	coua:owner "DLR" ;
	coua:traces req:documents .
req:Req66 a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a directive for rendering use cases and their coverage by high level requirements."@en ;
	coua:requirementId "Req66" ;
	coua:owner "DLR" ;
	coua:traces req:documents .
req:Req67 a coua:LowLevelRequirement ;
	coua:description "Coua shall issue an warning if the input data items have no defined relation to the checked ontology." ;
	coua:requirementId "Req67" ;
	coua:owner "DLR" ;
	coua:traces req:check .
req:ontology_do178c a coua:LowLevelRequirement ;
	coua:description "Coua shall provide an ontology for DO-178C."@en ;
	coua:requirementId "Req68" ;
	coua:owner "DLR" ;
	coua:traces req:check .
req:ontology_junit a coua:LowLevelRequirement ;
	coua:description "Coua shall provide an ontology for JUnit test reports."@en ;
	coua:requirementId "Req69" ;
	coua:owner "DLR" ;
	coua:traces req:ingest .
req:ontology_mantra a coua:LowLevelRequirement ;
	coua:description "Coua shall provide an ontology for requirements from a mantra database."@en ;
	coua:requirementId "Req70" ;
	coua:owner "DLR" ;
	coua:traces req:ingest .
req:ontology_mantra a coua:LowLevelRequirement ;
	coua:description "Coua shall provide an ontology for cargo-needy trace data."@en ;
	coua:requirementId "Req71" ;
	coua:owner "DLR" ;
	coua:traces req:ingest .
req:ontology_traces a coua:LowLevelRequirement ;
	coua:description "Coua shall provide an ontology for its own trace format for Python source code."@en ;
	coua:requirementId "Req72" ;
	coua:owner "DLR" ;
	coua:traces req:ingest .
req:ontology_cobertura a coua:LowLevelRequirement ;
	coua:description "Coua shall provide an ontology for its own trace format for Python source code."@en ;
	coua:requirementId "Req73" ;
	coua:owner "DLR" ;
	coua:traces req:ingest .
req:do178c_appl a coua:HighLevelRequirement ;
	coua:description "Coua shall provide a way to only apply the objectives of DO-178C that are required for a given software level."@en ;
	coua:requirementId "Req74" ;
	coua:owner "DLR" ;
	coua:traces req:Req00 .
req:do178c_appl_conf a coua:LowLevelRequirement ;
	coua:description "Coua shall provide a way to configure the software level of a software."@en ;
	coua:requirementId "Req75" ;
	coua:owner "DLR" ;
	coua:traces req:do178c_appl .
req:do178c_appl_appl a coua:LowLevelRequirement ;
	coua:description "Coua shall apply the configured software level before checks are performed."@en ;
	coua:requirementId "Req76" ;
	coua:owner "DLR" ;
	coua:traces req:do178c_appl .
req:do178c_appl_render a coua:LowLevelRequirement ;
	coua:description "Coua shall render the software level as part of the certification report."@en ;
	coua:requirementId "Req77" ;
	coua:owner "DLR" ;
	coua:traces req:do178c_appl .
req:do178c_independence a coua:HighLevelRequirement ;
	coua:description "Coua shall notify the reader of the reviewer that independence is required for an objective."@en ;
	coua:requirementId "Req78" ;
	coua:owner "DLR" ;
	coua:traces req:Req00 .
req:do178c_report_independence a coua:LowLevelRequirement ;
	coua:description "Coua shall contain a directive that allows the developer to render the list of objectives that require independent review in the report."@en ;
	coua:requirementId "Req79" ;
	coua:owner "DLR" ;
	coua:traces req:do178c_independence .

uc:UC05 a coua:UseCase ;
	coua:ucId "UC05" ;
	coua:title "Shared Reality"@en ;
	coua:actor "Developer" ;
	coua:goal "DLR-SMART3" ;
	coua:scope "ADF"@en ;
	coua:level "System"@en ;
	coua:story "As a developer I want the certification framework to produce the same results every time I give it the same inputs as someone else so that everyone has a shared reality of the current certification status of the project."@en ;
	coua:stakeholder "Developer"@en,"Reviewer"@en,"Certification Authority"@en ;
	coua:precondition "The project's artifacts are reproducible in a way that they do not change if they are created twice from the same data."@en ;
	coua:postcondition "All stakeholders get the same certification results."@en ;
	coua:trigger "The certification status is queried by a stakeholder."@en ;
	coua:flow ( "The artifacts are reproducibly retrieved or created."@en "All stakeholders run the certification framework using the same version of the artifacts."@en ) ;
	coua:extension "As the certification authority I want to inspect the identical report as the developer so that I am sure to certify the right revision of the product."@en .

uc:UC01 a coua:UseCase ;
	coua:ucId "UC01" ;
	coua:title "Check Objectives"@en ;
	coua:actor "Certification Authority" ;
	coua:goal "DLR-SMART1" ;
	coua:scope "Certification Report"@en ;
	coua:level "User"@en ;
	coua:story "As the certification authority I want to be able to inspect all relevant data and documents for certification so that I can verify that sufficient evidence is provided to show that the certification objectives are completed."@en ;
	coua:stakeholder "Certification Authority"@en,"Vendor"@en ;
	coua:precondition "The Software Accomplishment Summary is created by the CI."@en ;
	coua:postcondition "The certification authority can determine which objectives are not completed."@en,"The certification authority can determine that all objectives are completed."@en ;
	coua:trigger "The certification liaison process enters a new iteration."@en ;
	coua:flow ( "The vendor prepares the certification report along with all supporting materials."@en "The certification authority obtains the report along with the supporting materials from the vendor."@en "The certification authority reviews the materials and determines compliance."@en "The certification authority submits their findings to the vendor."@en ) ;
	coua:extension "As a vendor I want the report to clearly state if all objectives are met so that I can determine when the report is ready to be handed in to the CA."@en .

uc:UC02 a coua:UseCase ;
	coua:ucId "UC02" ;
	coua:title "Continuous Testing"@en ;
	coua:actor "Developer" ;
	coua:goal "DLR-SMART2" ;
	coua:scope "Certification Report"@en ;
	coua:level "User"@en ;
	coua:story "As a software developer I want the CI to check the progress towards the certification objectives so that I can prevent regressions and assess the effectiveness of my attempts to make progress towards the objectives."@en ;
	coua:stakeholder "Developer"@en,"Tester"@en ;
	coua:precondition "The CI produces or discovers artifacts that can be used for generating evidence towards the certification objectives, such as trace-data, test-results, requirements, coverage data."@en,"Transformations for creating evidences from the artifacts are available."@en,"The projects defines which evidence to use for which objective."@en ;
	coua:postcondition "The CI indicates the progress towards each objective and which change produces a regression."@en ;
	coua:trigger "A developer submits code or documents to the SCM."@en ;
	coua:flow ( "The CI runs the certification framework, producing a certification report."@en ) ;
	coua:extension "As a reviewer I want to check the certification status before accepting changes to the software so that no regressions from the certification objectives are made when applying a change."@en .

uc:UC06 a coua:UseCase ;
	coua:ucId "UC06" ;
	coua:title "Defining Ontologies"@en ;
	coua:actor "Vendor" ;
	coua:goal "DLR-SMART2" ;
	coua:scope "Ontologies"@en ;
	coua:level "User"@en ;
	coua:story "As the vendor I want to define my own extensions to the certification objectives to check additional or adapted objectives so that I can adapt my processes to the requirements of the CA."@en ;
	coua:stakeholder "Vendor"@en ;
	coua:precondition "The certification framework defines ontology classes for objectives, data-items, evidences and other outputs."@en ;
	coua:postcondition "The objective is related to other objectives and evaluated by the certification framework using the artifacts."@en ;
	coua:trigger "The CA requires that an objective or requirement that is not explicitly specified by an ontology for an existing regulation is added."@en ;
	coua:flow ( "The vendor adds definitions for the objectives including what inputs are needed to evaluate them."@en ) ;
	coua:extension "As the certification authority I want to have a mechanised description of the objective and its inputs to have a common and definite language with the vendor."@en .

uc:UC10 a coua:UseCase ;
	coua:ucId "UC10" ;
	coua:title "Incremental Certification"@en ;
	coua:actor "Developer" ;
	coua:goal "DLR-SMART10" ;
	coua:scope "Certification Report"@en ;
	coua:level "User"@en ;
	coua:story "As a developer, during development, I want to be able to mark objectives which have not yet been worked on as not achievable, so that I can focus on the progress of the objective(s) I am working on."@en ;
	coua:stakeholder "Vendor"@en,"Developer"@en,"Reviewer"@en ;
	coua:precondition "The list of objectives for a project is known."@en ;
	coua:postcondition "The certification framework reports the failures of objectives, but the failures of marked objectives are featured less prominently."@en ;
	coua:trigger "An objective that is currently not completed, but is planned to be completed in the future."@en ;
	coua:flow ( "The developer marks the objective as not achievable using the manifest file."@en ) ;
	coua:extension "As a developer, I want to remove the marker from the objective I am working on so that I am notified of regressions."@en .

uc:UC09 a coua:UseCase ;
	coua:ucId "UC10" ;
	coua:title "Machine-Readable Certification Report"@en ;
	coua:actor "Developer" ;
	coua:goal "DLR-SMART2" ;
	coua:scope "Certification Report"@en ;
	coua:level "User"@en ;
	coua:story "As a developer I want the certification report to be machine-readable so that it be processed by additional tools."@en ;
	coua:stakeholder "Developer"@en ;
	coua:precondition "The certification report is generated in a standardized format."@en ;
	coua:postcondition "The report data is displayed by the COTS tools."@en ;
	coua:trigger "The certification report is created."@en ;
	coua:flow ( "The certification report data is created and serialized in the standardized format."@en ) ;
	coua:extension "As the vendor, I want to archive the report data to make historical data of my product searchable."@en .

uc:UC04 a coua:UseCase ;
	coua:ucId "UC04" ;
	coua:title "Use COTS Tools"@en ;
	coua:actor "Developer" ;
	coua:goal "DLR-SMART3" ;
	coua:scope "TDF"@en ;
	coua:level "User"@en ;
	coua:story "As a developer I want to use artifacts provided by my existing tooling as inputs for the certification framework so that I can check my certification progress."@en ;
	coua:stakeholder "Developer"@en,"Reviewer"@en ;
	coua:precondition "The certification framework provides a means for describing how artifacts are created by custom tools."@en,"The certification framework provides ingestion methods for some pre-defined artifact types."@en ;
	coua:postcondition "The definitions are used by the certification framework to discover or create the artifacts and ingest them."@en ;
	coua:trigger "An output of a COTS tool is to be used as an input for the certification framework."@en ;
	coua:flow ( "The developer defines which artifact type the artifact has using the ADF and the tool which creates the artifact type using the TDF."@en ) ;
	coua:extension "As a developer, I want the certification framework to provide default definitions for some tools, so that I don't have to provide my own."@en .

uc:UC07 a coua:UseCase ;
	coua:ucId "UC07" ;
	coua:title "Tracking Artifact Dependencies"@en ;
	coua:actor "Vendor" ;
	coua:goal "DLR-SMART2" ;
	coua:scope "ADF"@en ;
	coua:level "User"@en ;
	coua:story "As the vendor I want to track down why an objective is not completed so that I can take appropriate action."@en ;
	coua:stakeholder "Vendor"@en,"Developer"@en,"Certification Authority"@en ;
	coua:precondition "An ontology links objectives to input and output artifacts."@en,"The inputs and outputs are tracable onto each other if there is a relationship between them and this relationship is expressed in the ontology."@en ;
	coua:postcondition "An incomplete objective is detected by tracing the defect from individual artifacts to one or more objectives."@en ;
	coua:trigger "Changes are made to the product."@en ;
	coua:flow ( "The certification framework evaluates the relationships between the inputs and outputs and traces them back to objectives."@en "The relationship is displayed as part of the certification report."@en ) ;
	coua:extension "As the CA I want to inspect the report to verify that each objective has been completed."@en .

uc:UC08 a coua:UseCase ;
	coua:ucId "UC08" ;
	coua:title "Tracing"@en ;
	coua:actor "Software Developer" ;
	coua:goal "DLR-SMART3" ;
	coua:scope "ADF"@en ;
	coua:level "User"@en ;
	coua:story "As a developer I want to track the contents of artifacts like requirements, test cases, source code and object code onto each other so that I can use the tracing as a data-item."@en ;
	coua:stakeholder "Developer"@en,"Reviewer"@en ;
	coua:precondition "The artifact types that should be traced are modeled using the ADF."@en ;
	coua:postcondition "The report shows the tracing between the artifacts."@en ;
	coua:trigger "A new artifact is added."@en ;
	coua:flow ( "The developer uses an existing class defintion or creates a new class definition for the ADF inside an ontology."@en "The developer declares that a specific artifact is of that type."@en "The certification framework understands the defition and can use the contents of the artifacts for tracing."@en ) ;
	coua:extension "As the certification authority I want to inspect the report to verify that sufficient coverage of requirements, source and object code exists."@en .

uc:UC03 a coua:UseCase ;
	coua:ucId "UC03" ;
	coua:title "Retrieve Artifact"@en ;
	coua:actor "System Integrator" ;
	coua:goal "DLR-SMART2" ;
	coua:scope "ADF"@en ;
	coua:level "System"@en ;
	coua:story "As the vendor I want to retrieve or reproduce the software, configuration, required build environment, test environment, artifacts, evidences and certification progress during any point during any iteration of the software life cycle so that I can trace defective changes and make corrective changes to previous versions."@en ;
	coua:stakeholder "Developer"@en,"Systems Integrator"@en ;
	coua:precondition "All changes to the software, configuration and non-reproducible artifacts that represent the state of the project at a given time during the software lifecycle are versioned and permanently recorded."@en ;
	coua:postcondition "The artifacts are identical to the artifacts that were previously created using the revision."@en,"The results from running the certification framework to evaluate the objectives is identical to previous runs using the same revision."@en ;
	coua:trigger "A change of the software, its requirements or its configuration items is accepted."@en ;
	coua:flow ( "The developer or systems integrator makes a checkout of the revision in question from the SCM."@en "The developer or systems integrator reproducibly recreates or retrieves all artifacts."@en ) ;
	coua:extension "As a software developer or systems integrator I want to reproduce a previous state of the integrated software to reproduce a situation in which a fault occurs so that I can identify the defective change."@en .
