# TODO want to know the provenance of the artifacts (what command produced it, e.g. which derivation path)
# TODO maybe put it there using Nix for better caching, must be in buildInputs
# TODO possibly we want to generate the manifest from Nix

[[model]]
name = "ED-12C"
source = "file:models/do178c.owl"
# Source document for text references to point to
reference = "https://eshop.eurocae.net/eurocae-documents-and-reports/ed-12c-with-corrigendum-1"

# [[artifact.psac]]
# source = "psac.pdf"

# TODO Are these the types of artifacts we need?
# TODO They must be of the types required for the ontology (e.g. for ED-12C PSAC, Requirements data, trace data, source code)
[[artifact]]
coverage-report = "coverage.json" # lcov json format

[[artifact]]
test-report = "test_report.json"

[[artifact]]
justification = "justifications.json" # TODO get these from annotations in the code, explaining why something is not covered by a test

[[artifact]]
requirements = "requirements.toml"

[[artifact]]
use-cases = "use-cases.toml"

[[artifact]]
requirement-traces = "target/coua_trace.json" # generated by cargo-coua
